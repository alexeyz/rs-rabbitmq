= RightScale Cookbook

== DESCRIPTION:

This cookbook provides base recipes used to set up services used by the
RightScale Cloud Management Platform.

== REQUIREMENTS:

Requires a virtual machine launched from a RightScale managed RightImage.

== COOKBOOKS DEPENDENCIES:

Please see the <tt>metadata.rb</tt> file for the latest dependencies.

== KNOWN LIMITATIONS:

There are no known limitations.

== SETUP:

The <tt>rightscale::default</tt> recipe performs common server configuration
steps such as enabling monitoring on an instance so that graphs can be
displayed in the RightScale Dashboard.

The <tt>rightscale::install_tools</tt> recipe installs the
<tt>rightscale_tools</tt> gem which provides tools for dealing with databases,
volumes, and remote object storage providers.

The <tt>rightscale::rightscale::setup_security_updates</tt> recipe configures
the package manager to apply security updates by unfreezing the
servers repositories.  On apt based systems this unfreezes the security
repository.  On yum based systems this unfreezes all repositories except
the RightScale-Epel repository.  Runs if the <tt>rightscale/security_updates</tt>
input is set to "enable", otherwise this action is skipped.  Note: once
security updates are enabled they can not be disabled.

The <tt>rightscale::do_security_updates</tt> recipe updates a server with
the latest available security patches.  Non-security related software updates
are not installed.  It runs as the last operational script to ensure a new server
has all available security updates applied.  Runs if the 
<tt>rightscale/security_updates</tt> input is set to "enable", otherwise 
this action is skipped.  Note: once security updates are enabled they can 
not be disabled.

== USAGE:

=== Update a server with latest security patches

1. Prior to launching a server set the advanced input
   <tt>rightscale/security_updates</tt> to <tt>enable</tt>
2. When the server is operational all current security updates are applied.
3. Apply security updates using:
  
    "rightscale::do_security_updates"

   to bring the server to the latest patch level.

=== Enable security updates on a running server

1. On a running a server set the advanced input <tt>rightscale/security_updates</tt>
   to <tt>enable</tt>
2. Setup the package manager for security updates using:

    "rightscale::setup_security_updates"

   to unfreeze the security related repositories.
3. To update the server with the latest security updates follow the steps above.

== DETAILS:

=== Definitions:

==== rightscale_enable_collectd_plugin

* Accepts only one parameter "name" which is the name of the collectd plugin to
  enable.
* The plugin name is added to <tt>node[:rightscale][:plugin_list_array]</tt> which is used
  to create the list of plugins in the <tt>/etc/collectd/collectd.conf</tt>
  file.
* The <tt>node[:rightscale][:plugin_list_array]</tt> will have any plugins listed
  in the <tt>node[:rightscale][:plugin_list]</tt> merged into it, which 
  supports any legacy recipes, as well as allow the input to be manipulated in
  the RightScale Dashboard.

Syntax:

  rightscale_enable_collectd_plugin "curl_json"

==== rightscale_monitor_process

* Accepts only one parameter, "name" which is the name of the process to
  monitor.
* The process name is added to the <tt>node[:rightscale][:process_list_array]</tt>
  which is used to create the list of processes in the
  <tt>/etc/collectd/conf/processes.conf</tt> file.
* The <tt>node[:rightscale][:process_list_array]</tt> will have any processes
  listed in <tt>node[:rightscale][:process_list]</tt> merged into it, which supports
  any legacy recipes, as well as allow the input to be manipulated in the
  RightScale Dashboard.

Syntax:

  rightscale_monitor_process "nginx"

==== rightscale_marker

* Accepts only one parameter, "location" which can be used to denote 
  the :start or :end of a recipe. It can also be :begin, :stop, and 
  the string versions.
* Used to log the start and end of a recipe using the 'Chef::Log.info' Chef Logger class.
  Should be added at the beginning and end of a recipe.
* Example:
  `========================= cookbook_name::recipe_name : START/END =========================`

Syntax:

  rightscale_marker :start

  rightscale_marker :end

=== Resources:

==== rightscale_server_collection

The server collection resource finds a set of servers in a deployment with a set
of tags. The <tt>tags</tt> attribute specifies the tag or tags to search for (if
multiple tags are specified, servers with any of the tags will match) and the
optional <tt>mandatory_tags</tt> attribute specifies tags that need to also
appear on the servers, it will wait one minute for the <tt>mandatory_tags</tt>
to appear, which can be overridden with the <tt>timeout</tt> attribute.

Syntax:

  rightscale_server_collection "rightscale_servers" do
    tags "rs_login:state=active"
    mandatory_tags "server:uuid=*"
  end

NOTE: The <tt>secondary_tags</tt> attribute is deprecated in favor of <tt>mandatory_tags</tt>.

== LICENSE:

Copyright RightScale, Inc. All rights reserved.  All access and use subject to
the RightScale Terms of Service available at http://www.rightscale.com/terms.php
and, if applicable, other agreements such as a RightScale Master Subscription
Agreement.
